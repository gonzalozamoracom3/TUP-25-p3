@page "/carrito"
@inject NavigationManager NavigationManager
@using tp6.Models
@inject ApiService ApiService
@using Client.Services;
@using Microsoft.AspNetCore.WebUtilities;
<h3>Tu Carrito</h3>

@if (items == null)
{
    <p>Cargando...</p>
}
else if (!items.Any())
{
    <p>El carrito está vacío.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Producto</th>
                <th>Precio</th>
                <th>Cantidad</th>
                <th>Total</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in items)
            {
                <tr>
                    <td>@item.Producto.Nombre</td>
                    <td>$@item.Producto.Precio</td>
                    <td>@item.Cantidad</td>
                    <td>$@(item.Cantidad * item.Producto.Precio)</td>
                </tr>
            }
        </tbody>
    </table>

    <p><strong>Total general: $@items.Sum(i => i.Cantidad * i.Producto.Precio)</strong></p>

    <button class="btn btn-success" @onclick="ConfirmarCompra">Confirmar compra</button>
}

@code {
    private List<CarritoItem> items = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
 
            var carrito = await ApiService.ObtenerCarritoCompletoAsync();
            items = carrito.CarritoItems; // ⬅️ CORREGIDO
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error al cargar el carrito: " + ex.Message);
        }
    }

    private async Task ConfirmarCompra()
    {
        try
        {
            await ApiService.ConfirmarCompraAsync();
            items.Clear();
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error al confirmar la compra: " + ex.Message);
        }
    }
}


